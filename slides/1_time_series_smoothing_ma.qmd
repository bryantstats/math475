---
title: "Time Series"
format: 
  beamer
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
```

# Cross Sectional vs. Time Series Data

-   Cross Sectional Data: Multiple objects observed at a particular point of time

# Cross Sectional vs. Time Series Data

-   Cross Sectional Data: Multiple objects observed at a particular point of time

-   Examples: customers' behavioral data at today's update,companies' account balances at the end of the last year,patients' medical records at the end of the current month.

# Cross Sectional vs. Time Series Data

-   Time Series Data: One single object (product, country, sensor, ..) observed over multiple equally-spaced time periods

# Cross Sectional vs. Time Series Data

-   Time Series Data: One single object (product, country, sensor, ..) observed over multiple equally-spaced time periods

-   Examples: quarterly Italian GDP of the last 10 years, weekly supermarket sales of the previous year, yesterday's hourly temperature measurements.

# Examples

![](images/ts1.png)

# Examples

![](images/ts2.png)

# Examples

![](images/ts3.png)

# Examples

![](images/ts4.png)

# Examples

![](images/ts5.png)

# Examples

```{r}
# define data
library(ggfortify)
library(tidyverse)
library(xts)
library(fpp2)
library(TTR)
sales=BJsales
earnings=JohnsonJohnson
nile=Nile
url="CRUTEM3v-gl.dat.txt"
f=read.table(url,fill=TRUE)
ny=nrow(f)/2;x=c(t(f[2*1:ny-1,2:13]))
temperature=ts(x,start=2019,frequency=12,end=c(2020,1))
autoplot(temperature)+ ggtitle("World Temperature")
```

# What to do with time series?

-   Understanding of specific series features or pattern

-   Forecasting

# 

```{=tex}
\begin{center}
\Huge Smoothing
\end{center}
```
# Smoothing

-   Smoothing is usually done to reveal the series patterns and trends.

# Simple Moving Average Smoothing

-   Moving Average (MA) creates a new series by averaging the most recent observations from the original series.

-   MA(k) creates $s_t$ as follows.

$$
s_{t} = \frac{y_t + y_{t-1} +...+ y_{t-k+1}}{k}
$$

-   Larger $k$ will smooth the series more strongly

# 

```{r}
d <- read_csv('data/MedCPISmooth.csv')
t1 = ts(d$PerMEDCPI, start = c(1947, 1), frequency = 4)
k = 8
t1_sma = SMA(t1, n = k)
plot(t1, main = paste0("Medical Component of the CPI"))
```

# 

```{r}
d <- read_csv('data/MedCPISmooth.csv')
t1 = ts(d$PerMEDCPI, start = c(1947, 1), frequency = 4)
k = 4
t1_sma = SMA(t1, n = k)
plot(t1, main = paste0("Moving average with k = ",k))
lines(t1_sma, col = "red")
```

# 

```{r}
d <- read_csv('data/MedCPISmooth.csv')
t1 = ts(d$PerMEDCPI, start = c(1947, 1), frequency = 4)
k = 8
t1_sma = SMA(t1, n = k)
plot(t1, main = paste0("Moving average with k = ",k))
lines(t1_sma, col = "red")
```

# 

```{r}
d <- read_csv('data/MedCPISmooth.csv')
t1 = ts(d$PerMEDCPI, start = c(1947, 1), frequency = 4)
k = 16
t1_sma = SMA(t1, n = k)
plot(t1, main = paste0("Moving average with k = ",k))
lines(t1_sma, col = "red")
```

# 

```{r}
d <- read_csv('data/MedCPISmooth.csv')
t1 = ts(d$PerMEDCPI, start = c(1947, 1), frequency = 4)
k = 32
t1_sma = SMA(t1, n = k)
plot(t1, main = paste0("Moving average with k = ",k))
lines(t1_sma, col = "red")
```

# 

```{r}
## Data 1
t1 = read_csv("beer.csv")
t1 = ts(t1, start = c(1956, 1), freq = 4)
k = 1
t1_sma = SMA(t1, n = k)
plot(t1, main = paste0("Original Series"))
```

# 

```{r}
## Data 1
t1 = read_csv("beer.csv")
t1 = ts(t1, start = c(1956, 1), freq = 4)
k = 2
t1_sma = SMA(t1, n = k)
plot(t1, main = paste0("Moving average with k = ",k))
lines(t1_sma, col = "red")
```

# 

```{r}
## Data 1
k = 5
t1_sma = SMA(t1, n = k)
plot(t1, main = paste0("Moving average with k = ",k))
lines(t1_sma, col = "red")
```

# 

```{r}
## Data 1
k = 12
t1_sma = SMA(t1, n = k)
plot(t1, main = paste0("Moving average with k = ",k))
lines(t1_sma, col = "red")
```

# Forecasting

-   We can use MA smoothing for forecasting

-   We have \begin{align*}
    s_t &= \frac{y_t + y_{t-1} +...+ y_{t-k+1}}{k}\\
    &=\frac{y_t + y_{t-1} +...+ y_{t-k+1}+y_{t-k}-y_{t-k}}{k}\\
    &=\frac{y_t + \bigg(y_{t-1} +...+ y_{t-k+1}+y_{t-k}\bigg)-y_{t-k}}{k}\\
    &= \frac{y_t + ks_{t-1}-y_{t-k}}{k}\\
    &= s_{t-1} + \frac{y_t-y_{t-k}}{k}
    \end{align*}

# Forecasting

-   If there is no trend in $y_t$ the second term $(y_t-y_{t-k})/k$ can be ignored
-   If $y_{Y}$ is the lastest value observed, we can forecast $l$ lead time into future by  ($\hat{y}_{T+l}$  is a forecast of $y_{T+l}$)

$$
\hat{y}_{T+l} = s_T
$$

-   If there is a linear trend in a series, we can use the double moving average to estimate the trend (slope)

# 

```{=tex}
\begin{center}
\Huge Double MA
\end{center}
```
# Double MA

-   Linear trend time series: $$
    y_t = \beta_0 + \beta_1t +\epsilon_t
    $$

-   Step 1: MA Smooth the series $$
    s^{(1)}_{t} = \frac{y_t + y_{t-1} +...+ y_{t-k+1}}{k}
    $$

-   Step 2: MA Smooth the smoothed series $$
    s^{(2)}_{t} = \frac{s^{(1)}_t + s^{(1)}_{t-1} +...+ s^{(1)}_{t-k+1}}{k}
    $$

-   Step 3: Calculate the linear trend/slope $$
    b_1 = \hat{\beta}_1 =  \frac{2}{k-1}\bigg(s_T^{(1)}-s_T^{(2)}\bigg)
    $$

# Forecasting

-   Forecasting $l$ lead time into future by $$
    \hat{y}_{T+l} = s^{(1)}_T + b_1 \cdot l
    $$

# 

You are given the following time series

| $t$   | 1   | 2   | 3   | 4   | 5   |
|:------|:----|:----|:----|:----|:----|
| $y_t$ | 1   | 3   | 5   | 8   | 13  |

-   Forecasting $y_{6}$ using simple moving average with $k = 2$

-   Forecasting $y_{6}$ using double moving average with $k = 2$

# 

# Example

-   We simulate 100 data points ($T=100$) of $$
    y_t = 1 +3t + \epsilon, 
    $$ where, $\epsilon \sim N(0, 5^2)$.

# 

```{r}
set.seed(2022)
n = 100
y = rep(0, n)

y[1] = 0
b0 = 1
b1 = 3

e = rnorm(n, sd = 5)

for (t in 2:n)
{
  y[t] = b0 + b1*t+e[t]
}

k = 12 
s1 = SMA(y, n = k)
s2 = SMA(s1, n = k)


b1_hat = 2*(s1[n]-s2[n])/(k-1)

autoplot(ts(y)) + ggtitle("Original Series")
```

# 

```{r}
autoplot(ts(s1)) + ggtitle(paste0("MA Series with k = ",k))
```

# 

```{r}
autoplot(ts(s2)) + ggtitle(paste0("Double MA Series with k = ",k))
```

# 

-   Using the above steps, the estimated trend is $b_1 = 2.92$

-   The forecast for the next points from $y_{100}$ is

$$
    \hat{y}_{100+l} = s_{100}+ b_1\cdot l = s_{100}+ 2.92\cdot l
$$
